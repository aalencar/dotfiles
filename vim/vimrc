" Author: Alexandre Alencar 
let g:solarized_termcolors=256
" ------------------------------------------------------------------------
"  PLUGINS MANAGEMENTS
" ------------------------------------------------------------------------

" ------------
"  Vundle
" ------------
set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" ------------
"  Plugins
" ------------

Plugin 'SirVer/ultisnips'
Plugin 'scrooloose/nerdtree'
Plugin 'kien/ctrlp.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-syntastic/syntastic'

" ------------
"  Ultisnips
" ------------
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:UltiSnipsEditSplit='vertical'
let g:UltiSnipsSnippetsDir='~/.vim/UltiSnips'

" ------------
"  NERDTree
" ------------
let g:NERDTreeWinSize=55
let NERDTreeIgnore = ['\.class$', '\.map$']

" ------------
"  Syntastic
" ------------
" config
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['jshint']

" automatic formating on save
"autocmd bufwritepost *.js silent !standard --fix %
"set autoread
" ------------

" All of your Plugins must be added before the following line
call vundle#end()            " required

" ------------------------------------------------------------------------
"  GENERAL VIM CONFIGURATION
" ------------------------------------------------------------------------

" be iMproved
set nocompatible 

" no swap files
set noswapfile
set nobackup

" turn on syntax highlighting
syntax enable
syntax on 

" make vim try to detect file types and load plugins for them

filetype on
filetype plugin indent on
filetype indent on

" reload files changed outside vim
set autoread

" encoding is utf 8
set encoding=utf-8

" enable matchit plugins which ships with vim and enhances '%'
runtime macros/matchit.vim

" make vim use hidden buffer more liberally
set hidden

" ------------
"  Editing
" ------------

" toggle invisible characters
set list
set listchars=tab:→\ ,eol:¬,trail:⋅,extends:❯,precedes:❮
set showbreak=↪

" don't highlight searchs by default
 set nohlsearch

" suggestion for normal mode commands
set wildmenu
set wildmode=list:longest:full,full


set textwidth=80
set colorcolumn=80
highlight ColorColumn ctermbg=black

" indentation
set autoindent  	" autoindent based on line above, works most of the time
set smartindent 	" smarter indent for C-like languages

" tab settings
set noexpandtab 	" always use tabs
set tabstop=4		" how many spaces a <Tab> counts for
set shiftwidth=4	" how many spaces when identing

" tab setup for html files
au Filetype html setlocal shiftwidth=2 tabstop=2 softtabstop=2

set scrolloff=3		" minimal number of lines to keep above and bellow the cursor

set number 			" display line number
set relativenumber	" display the line number relative to the line with the cursor

set backspace=indent,eol,start 

" always shows the file name at the bottom
set laststatus=2

au BufNewFile,BufFilePre,BufRead *.ts set filetype=javascript

" ------------
"  Style
" ------------
set background=dark
let g:solarized_termcolors = 16

" ------------------------------------------------------------------------
"  SHORCUTS 
" ------------------------------------------------------------------------

" leader
let mapleader = ","

" good habits
inoremap <CR> <C-o>:throw 'Use C-j instead of Enter'<CR>
inoremap <BS> <C-o>:echoerr 'Use C-h instead of Backspace'<CR>
noremap <ESC> <C-o>:echoerr 'Use C-c instead of ESC'<CR>i

" ------------
"  Plugins
" ------------
"  UltiSnips
noremap <leader>u :UltiSnipsEdit<CR>

" vim-fugitive
noremap <leader>gc :Gcommit<CR>
noremap <leader>gd :Gdiff<CR>
noremap <leader>gs :Gstatus<CR>
noremap <leader>gp :Gpush<CR>
noremap <leader>gl :Glog<CR>

noremap [q :cn<CR>
noremap [p :cp<CR>

" NERDTree
noremap § :NERDTreeToggle<CR>

" ------------
"  Editing 
" ------------
noremap <leader>a ggVG
vmap <leader>Y "*y
vmap <leader>P "*p

" comment stuff out
noremap <leader>/ I//<ESC>
noremap <leader>d/ ^2x

" ------------
"  Navigation 
" ------------
" moving up and down as expected
nnoremap j gj
nnoremap k gk

" scroll the viewport 3x faster
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" ------------
" Files 
" ------------
" vim
noremap <leader>ev :e $MYVIMRC<CR>
noremap <leader>sv :source $MYVIMRC<CR>

" tmux
noremap <leader>et :e $TMUXCONF<CR>
noremap <leader>es :e ~/.tmux-sessions/<CR>

" bash
noremap <leader>eb :e ~/.bashrc<CR>

noremap <leader>w :w<CR> 
noremap <leader>q :q<CR>
noremap <leader>Q :q!<CR>

" ------------
"  Panes
" ------------
" swith between panes
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" maps to split window
noremap <leader>\ :vs %<CR>
noremap <leader>- :split %<CR>

" ------------
"  Buffers
" ------------
" switch to next and previous buffers
noremap <leader>n :bn<CR>
noremap <leader>p :bp<CR>
noremap <leader>l :bl<CR>

" map <leader><leader> to switch to the last buffer 
" you had open in the pane you are currently in
noremap <leader>. <C-^>

" ------------------------------------------------------------------------
"  DEVELOPMENT
" ------------------------------------------------------------------------
" ------------
"  WebDev 
" ------------
nnoremap <leader>oc :!open -a /Applications/Google\ Chrome.app %<CR><CR>
nnoremap <leader>os :!open -a /Applications/Safari.app %<CR><CR>

" ------------
"  Java 
" ------------
noremap <leader>c :!javac *java<CR>

" run it
noremap <leader>r :!java -cp "../../bin" gamelogic.GameLogicMain<CR>

