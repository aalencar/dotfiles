# tmux.conf
#
# ------------
#  General conf
# ------------

# 0 is too far from 1
set -g base-index 1

# remap prefix to Control + a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# force reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "source-file done"

# vim navigation keys
set-window-option -g mode-keys vi

# fix clipboard issue
set-option -g default-command "reattach-to-user-namespace -l zsh"

unbind-key \;
bind-key \; command-prompt

unbind-key z
bind-key u resize-pane -Z
# ------------
#  Sessions
# ------------
bind S source-file ~/.tmux-sessions/tmux-session.dev

# ------------
#  Panes
# ------------

bind h select-pane -L
bind j select-pane -U
bind k select-pane -D
bind l select-pane -R

# split
bind v split-window -h -c '#{pane_current_path}'
bind s split-window -v -p 25 -c '#{pane_current_path}'

unbind '"'
unbind %

unbind g
bind g send-keys -t right 'npm run dev ' Enter

# resize
bind H resize-pane -L 10
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 10

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# ------------
#  Windows
# ------------
bind Space last-window
set-option -g allow-rename off
bind n  previous-window
bind m next-window

# ------------
#  Style
# ------------
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set-option -g status-position bottom
set-window-option -g xterm-keys on
bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
set-option -g status-fg white
set-option -g status-bg default
set-option -g status-attr default
set-window-option -g window-status-fg "#666666"
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg red
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr default
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright
set -g status-left "#S  "
set -g status-justify left
setw -g window-status-format         ' #W #F  '
setw -g window-status-current-format ' #W #F  '
#setw -g window-status-format         ' #(echo "#{pane_current_command}") '
#setw -g window-status-current-format ' #(echo "#{pane_current_command}") '
set -g status-right " "
